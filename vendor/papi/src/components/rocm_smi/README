/** 
* @file:   README
* CVS:     $Id$
* @defgroup papi_components Components
* @brief Component Specific Readme file: ROCM_SMI
*/

/** @page component_readme Component Readme 

@section Component Specific Information

rocm_smi/ 

Support for ROCM_SMI (System Management Interface) library.

General information
-------------------

The PAPI ROCM_SMI component allows the user to read things like the
temperature, fan speed, and power consumption of AMD GPU devices.
It can also be used to set limits on the power consumption or fan 
speed, using a PAPI_write() interface.

How to install PAPI with the ROCM_SMI component?
-------------------------------------------- 

These instructions are specific to the ICL environment; but may be useful to
users if translated to their own working or testing environments.

ICL testing was done (August 2019) on the ICL system "caffeine"; which has AMD
equipment installed, and the ROCM interface software installed at /opt/rocm.

Depending on your system, this software may require environment variables to be
defined. 

A shell script in papi/src/components/rocm/tests/run_papi.sh contains an
example of how to work with just the LD_LIBRARY_PATH (other than the four
exports are that are needed by the AMD RocProfiler). This script works on the
ICL test system Caffeine, you will need to change directory entries to match
your own system. In a shell script, those exports (setting environment
variables) go away when the shell exits. If you want to execute commands and
programs from the command line instead, export the same environment variables
from the command line.

Many users would rather not change LD_LIBRARY_PATH. We can operate instead
with other environment variables; those are described next. Note that
if these environment variables are never defined, our code will try the
default locations indicated below.

If your ROCM_SMI files are in these standard locations, you may not need to 
export any variables at all. 

Some environment variables are used at compile time, others at runtime, and 
some at both times.

-----COMPILE TIME-----
The following variables are shown with their default values. If these defaults
match your system, then you don't have to set them. Otherwise you can override
the default by setting them, generally by 'export PAPI_ROCM_XXX=newvalue'. If
PAPI_ROCMSMI_ROOT is set, the _LIBS and _INC defaults will use it.

PAPI_ROCMSMI_ROOT       /opt/rocm_smi
PAPI_ROCMSMI_LIBS       $(PAPI_ROCM_ROOT)/build
PAPI_ROCMSMI_INC        $(PAPI_ROCM_ROOT)/include/rocm_smi
PAPI_ROCMSMI_LIBNAME    librocm_smi64.so 

-----RUNTIME-----
One library is required for the PAPI ROCM component. The name is
librocm_smi64.so (name can be overridden by export of PAPI_ROCMSMI_LIBNAME).

We will look for PAPI_ROCMSMI_LIBNAME in the following directories, in this order,
if the environment variable is defined (otherwise we don't try it).

PAPI_ROCMSMI_LIBS
PAPI_ROCMSMI_ROOT/build  (default for PAPI_ROCM_ROOT is /opt/rocm_smi).
Any LD_LIBRARY_PATH
Any default lib directory; e.g. /lib, /lib64, /usr/lib, /usr/lib64.

These exports assume you have papi installed in your $HOME directory.  ICL
developers copy-and-paste the following to the command line. The '#' lines are
not actually necessary. Either PAPI_ROCM_ROOT or LD_LIBRARY_PATH is necessary. 

----ICL only Settings-----
# These ONLY for Caffeine (an ICL test machine). 
export PAPI_ROCMSMI_ROOT=/home/tonycastaldo/rocm_smi_lib

-----EXAMPLE OF CONFIGURATION AND BUILD-----
Configure PAPI with ROCM_SMI enabled.  
    % # from papi install directory:
    % cd src
    % ./configure --prefix=some_location --with-components="rocm_smi"

Build with PAPI_ROCMSMI_ROOT specified only:
    % export PAPI_ROCMSMI_ROOT=/home/tonycastaldo/rocm_smi_lib
    % make 

To see if the component is active (and if not, why not):
    % utils/papi_component_avail

To find a list of ROCM supported events.
    % utils/papi_native_avail | grep rocm_smi

